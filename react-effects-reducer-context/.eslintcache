[{"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\index.js":"1","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\App.js":"2","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\Home\\Home.js":"3","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\MainHeader\\MainHeader.js":"4","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\Login\\Login.js":"5","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Card\\Card.js":"7","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Button\\Button.js":"8","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\store\\auth-context.js":"9","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Input\\Input.js":"10"},{"size":348,"mtime":1631098325204,"results":"11","hashOfConfig":"12"},{"size":1834,"mtime":1631098319916,"results":"13","hashOfConfig":"12"},{"size":522,"mtime":1631097849707,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1631096247306,"results":"15","hashOfConfig":"12"},{"size":8079,"mtime":1631107543985,"results":"16","hashOfConfig":"12"},{"size":1856,"mtime":1631093472228,"results":"17","hashOfConfig":"12"},{"size":218,"mtime":1631027389541,"results":"18","hashOfConfig":"12"},{"size":353,"mtime":1631027389569,"results":"19","hashOfConfig":"12"},{"size":992,"mtime":1631097464874,"results":"20","hashOfConfig":"12"},{"size":1037,"mtime":1631107449330,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d9i876",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\index.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\App.js",["46","47"],"import React, { useState, useEffect, useContext } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n  // useEffect(() => {\n  //   if (storedUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n    // <AuthContext.Provider value={{\n    //   isLoggedIn:isLoggedIn,\n    //   onLogout:logoutHandler\n    // }}>\n    // <MainHeader onLogout={logoutHandler} />\n    // <main>\n    //   {!isLoggedIn && <Login onLogin={loginHandler} />}\n    //   {isLoggedIn && <Home onLogout={logoutHandler} />}\n    // </main>\n    // </AuthContext.Provider>\n\n    //   <React.Fragment>\n    //   <AuthContext.Provider>\n    //   <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n    //   <main>\n    //     {!isLoggedIn && <Login onLogin={loginHandler} />}\n    //     {isLoggedIn && <Home onLogout={logoutHandler} />}\n    //   </main>\n    //   </AuthContext.Provider>\n    // </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\Home\\Home.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\Login\\Login.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Card\\Card.js",[],["48","49"],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Button\\Button.js",[],"C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\store\\auth-context.js",["50"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLogout: () => {},\r\n  onLogin: (email, password) => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\r\n    useEffect(() => {\r\n        if (storedUserLoggedInInformation === \"1\") {\r\n          setIsLoggedIn(true);\r\n        }\r\n      }, []);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n  };\r\n  const loginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"1\");\r\n    setIsLoggedIn(true);\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout: logoutHandler,\r\n        onLogin: loginHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","C:\\Harsha\\github\\React\\react-effects-reducer-context\\src\\components\\UI\\Input\\Input.js",["51"],"import React, { useRef, useEffect, useImperativeHandle } from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef();\r\n  // useEffect(() => {\r\n  //   inputRef.current.focus();\r\n  // }, []);\r\n  const activate = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      focus: activate,\r\n    };\r\n  });\r\n  return (\r\n    <div\r\n      className={`${classes.control} ${\r\n        props.isValid === false ? classes.invalid : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <input\r\n        ref={inputRef}\r\n        type={props.type}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n      />\r\n      {/* <input\r\n        type={props.type}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n      /> */}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n",{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":15,"column":10,"nodeType":"63","endLine":15,"endColumn":12,"suggestions":"64"},{"ruleId":"52","severity":1,"message":"56","line":1,"column":25,"nodeType":"54","messageId":"55","endLine":1,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedUserLoggedInInformation'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [storedUserLoggedInInformation]",{"range":"70","text":"71"},[443,445],"[storedUserLoggedInInformation]"]